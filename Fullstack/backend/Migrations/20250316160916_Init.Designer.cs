// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(JanusDbContext))]
    [Migration("20250316160916_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.AccessTokenBlacklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("BlacklistedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AccessTokenBlacklists");
                });

            modelBuilder.Entity("backend.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AuditLogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KeyValues")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NewValues")
                        .HasColumnType("longtext");

                    b.Property<string>("OldValues")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AuditLogId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("backend.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("LatestCommitHash")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("ParentBranch")
                        .HasColumnType("int");

                    b.Property<int>("RepoId")
                        .HasColumnType("int");

                    b.Property<string>("SplitFromCommitHash")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("BranchId");

                    b.HasIndex("ParentBranch");

                    b.HasIndex("RepoId");

                    b.HasIndex("RepoId", "BranchName")
                        .IsUnique();

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            BranchName = "main",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(2364), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LatestCommitHash = "925cc242245c8df69d12021001277c54ec4b321c",
                            RepoId = 1
                        },
                        new
                        {
                            BranchId = 2,
                            BranchName = "branch",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(2366), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 1,
                            LatestCommitHash = "18bd7fcf86b444b0270f93d333f7c5457e4abcbe",
                            ParentBranch = 1,
                            RepoId = 1,
                            SplitFromCommitHash = "925cc242245c8df69d12021001277c54ec4b321c"
                        });
                });

            modelBuilder.Entity("backend.Models.Commit", b =>
                {
                    b.Property<int>("CommitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CommitId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CommitHash")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset>("CommittedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TreeHash")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("CommitId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CommitHash");

                    b.HasIndex("CommittedAt");

                    b.ToTable("Commits");

                    b.HasData(
                        new
                        {
                            CommitId = 1,
                            BranchId = 1,
                            CommitHash = "925cc242245c8df69d12021001277c54ec4b321c",
                            CommittedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(2404), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 0,
                            Message = "Initial commit",
                            TreeHash = ""
                        },
                        new
                        {
                            CommitId = 2,
                            BranchId = 2,
                            CommitHash = "18bd7fcf86b444b0270f93d333f7c5457e4abcbe",
                            CommittedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(2407), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = 2,
                            Message = "Next commit",
                            TreeHash = "517e4c52e1020d3bc9901cb81093943d4919b55c"
                        });
                });

            modelBuilder.Entity("backend.Models.CommitParent", b =>
                {
                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("ChildId", "ParentId");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("CommitParents");

                    b.HasData(
                        new
                        {
                            ChildId = 2,
                            ParentId = 1
                        });
                });

            modelBuilder.Entity("backend.Models.RepoAccess", b =>
                {
                    b.Property<int>("RepoId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.HasKey("RepoId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RepoAccess");

                    b.HasData(
                        new
                        {
                            RepoId = 3,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 4,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 5,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 6,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 7,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 8,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 9,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 10,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 11,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 12,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 13,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 14,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 15,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 16,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 17,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 18,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 19,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 20,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 21,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 22,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 23,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 24,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 25,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 26,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 27,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 28,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 29,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 30,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 31,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 32,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 33,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 34,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 35,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 36,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 37,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 38,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 39,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 40,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 41,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 42,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 43,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 44,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 45,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 46,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 47,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 48,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 49,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 50,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 1,
                            UserId = 1,
                            AccessLevel = 3
                        },
                        new
                        {
                            RepoId = 1,
                            UserId = 2,
                            AccessLevel = 1
                        },
                        new
                        {
                            RepoId = 2,
                            UserId = 2,
                            AccessLevel = 3
                        });
                });

            modelBuilder.Entity("backend.Models.Repository", b =>
                {
                    b.Property<int>("RepoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RepoId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("RepoDescription")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("varchar(511)");

                    b.Property<string>("RepoName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RepoId");

                    b.HasIndex("OwnerId", "RepoName")
                        .IsUnique();

                    b.ToTable("Repositories");

                    b.HasData(
                        new
                        {
                            RepoId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 372, DateTimeKind.Unspecified).AddTicks(9981), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "First seeded",
                            RepoName = "Repo1"
                        },
                        new
                        {
                            RepoId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 372, DateTimeKind.Unspecified).AddTicks(9985), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = true,
                            OwnerId = 2,
                            RepoDescription = "Sec seeded",
                            RepoName = "Repo2"
                        },
                        new
                        {
                            RepoId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(20), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 3",
                            RepoName = "Repo3"
                        },
                        new
                        {
                            RepoId = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(94), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 4",
                            RepoName = "Repo4"
                        },
                        new
                        {
                            RepoId = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(130), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 5",
                            RepoName = "Repo5"
                        },
                        new
                        {
                            RepoId = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(160), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 6",
                            RepoName = "Repo6"
                        },
                        new
                        {
                            RepoId = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(186), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 7",
                            RepoName = "Repo7"
                        },
                        new
                        {
                            RepoId = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(218), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 8",
                            RepoName = "Repo8"
                        },
                        new
                        {
                            RepoId = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(237), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 9",
                            RepoName = "Repo9"
                        },
                        new
                        {
                            RepoId = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(363), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 10",
                            RepoName = "Repo10"
                        },
                        new
                        {
                            RepoId = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(396), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 11",
                            RepoName = "Repo11"
                        },
                        new
                        {
                            RepoId = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(414), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 12",
                            RepoName = "Repo12"
                        },
                        new
                        {
                            RepoId = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(442), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 13",
                            RepoName = "Repo13"
                        },
                        new
                        {
                            RepoId = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(460), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 14",
                            RepoName = "Repo14"
                        },
                        new
                        {
                            RepoId = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(520), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 15",
                            RepoName = "Repo15"
                        },
                        new
                        {
                            RepoId = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(546), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 16",
                            RepoName = "Repo16"
                        },
                        new
                        {
                            RepoId = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(565), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 17",
                            RepoName = "Repo17"
                        },
                        new
                        {
                            RepoId = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(613), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 18",
                            RepoName = "Repo18"
                        },
                        new
                        {
                            RepoId = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(632), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 19",
                            RepoName = "Repo19"
                        },
                        new
                        {
                            RepoId = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(651), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 20",
                            RepoName = "Repo20"
                        },
                        new
                        {
                            RepoId = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(668), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 21",
                            RepoName = "Repo21"
                        },
                        new
                        {
                            RepoId = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(686), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 22",
                            RepoName = "Repo22"
                        },
                        new
                        {
                            RepoId = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(705), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 23",
                            RepoName = "Repo23"
                        },
                        new
                        {
                            RepoId = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(723), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 24",
                            RepoName = "Repo24"
                        },
                        new
                        {
                            RepoId = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(741), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 25",
                            RepoName = "Repo25"
                        },
                        new
                        {
                            RepoId = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(759), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 26",
                            RepoName = "Repo26"
                        },
                        new
                        {
                            RepoId = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(778), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 27",
                            RepoName = "Repo27"
                        },
                        new
                        {
                            RepoId = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(840), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 28",
                            RepoName = "Repo28"
                        },
                        new
                        {
                            RepoId = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(866), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 29",
                            RepoName = "Repo29"
                        },
                        new
                        {
                            RepoId = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(929), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 30",
                            RepoName = "Repo30"
                        },
                        new
                        {
                            RepoId = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(972), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 31",
                            RepoName = "Repo31"
                        },
                        new
                        {
                            RepoId = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(993), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 32",
                            RepoName = "Repo32"
                        },
                        new
                        {
                            RepoId = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1012), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 33",
                            RepoName = "Repo33"
                        },
                        new
                        {
                            RepoId = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1032), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 34",
                            RepoName = "Repo34"
                        },
                        new
                        {
                            RepoId = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1051), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 35",
                            RepoName = "Repo35"
                        },
                        new
                        {
                            RepoId = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1069), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 36",
                            RepoName = "Repo36"
                        },
                        new
                        {
                            RepoId = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1088), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 37",
                            RepoName = "Repo37"
                        },
                        new
                        {
                            RepoId = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1105), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 38",
                            RepoName = "Repo38"
                        },
                        new
                        {
                            RepoId = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1122), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 39",
                            RepoName = "Repo39"
                        },
                        new
                        {
                            RepoId = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1140), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 40",
                            RepoName = "Repo40"
                        },
                        new
                        {
                            RepoId = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1158), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 41",
                            RepoName = "Repo41"
                        },
                        new
                        {
                            RepoId = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1177), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 42",
                            RepoName = "Repo42"
                        },
                        new
                        {
                            RepoId = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 43",
                            RepoName = "Repo43"
                        },
                        new
                        {
                            RepoId = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1239), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 44",
                            RepoName = "Repo44"
                        },
                        new
                        {
                            RepoId = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1260), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 45",
                            RepoName = "Repo45"
                        },
                        new
                        {
                            RepoId = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1279), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 46",
                            RepoName = "Repo46"
                        },
                        new
                        {
                            RepoId = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1297), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 47",
                            RepoName = "Repo47"
                        },
                        new
                        {
                            RepoId = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1315), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 48",
                            RepoName = "Repo48"
                        },
                        new
                        {
                            RepoId = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1333), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 49",
                            RepoName = "Repo49"
                        },
                        new
                        {
                            RepoId = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 373, DateTimeKind.Unspecified).AddTicks(1352), new TimeSpan(0, 0, 0, 0, 0)),
                            IsPrivate = false,
                            OwnerId = 1,
                            RepoDescription = "Seeded 50",
                            RepoName = "Repo50"
                        });
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 372, DateTimeKind.Unspecified).AddTicks(9605), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "user@1.com",
                            PasswordHash = "AzsQl0T1Rs33Fb2DCrNHsgGqtNOs+E7yDAuxhXaGyRE=",
                            Salt = new byte[] { 235, 33, 66, 94, 233, 6, 134, 88, 30, 87, 229, 199, 3, 110, 217, 236 },
                            Username = "User1"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 16, 16, 9, 16, 372, DateTimeKind.Unspecified).AddTicks(9619), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "user@2.com",
                            PasswordHash = "vXjpOmmjohW4W1IaLzt6ICPt7Nzl5ecuZR5og9Gos8k=",
                            Salt = new byte[] { 80, 73, 21, 54, 188, 15, 154, 211, 19, 187, 125, 12, 3, 20, 225, 230 },
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("backend.Models.Branch", b =>
                {
                    b.HasOne("backend.Models.Branch", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentBranch")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Repository", "Repository")
                        .WithMany("Branches")
                        .HasForeignKey("RepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("backend.Models.Commit", b =>
                {
                    b.HasOne("backend.Models.Branch", "Branch")
                        .WithMany("Commits")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("backend.Models.CommitParent", b =>
                {
                    b.HasOne("backend.Models.Commit", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Commit", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("backend.Models.RepoAccess", b =>
                {
                    b.HasOne("backend.Models.Repository", "Repository")
                        .WithMany("RepoAccesses")
                        .HasForeignKey("RepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "User")
                        .WithMany("RepoAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repository");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Models.Repository", b =>
                {
                    b.HasOne("backend.Models.User", "Owner")
                        .WithMany("Repositories")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("backend.Models.Branch", b =>
                {
                    b.Navigation("Commits");
                });

            modelBuilder.Entity("backend.Models.Commit", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Parents");
                });

            modelBuilder.Entity("backend.Models.Repository", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("RepoAccesses");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Navigation("RepoAccesses");

                    b.Navigation("Repositories");
                });
#pragma warning restore 612, 618
        }
    }
}
